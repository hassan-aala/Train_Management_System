<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ICAgICAglBBQSghB/9k=
</value>
  </data>
</root>